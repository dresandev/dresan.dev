---
import type { Project } from "@/types"
import { getLangFromUrl, useTranslations } from "@/i18n/utils"
import ProjectModal from "@/components/project-modal.astro"

interface Props extends Project {}

const { id, title, descriptionI18nId, imageUrl, gradient, modalData } = Astro.props

const modalId = `${id}-modal`

const locale = getLangFromUrl(Astro.url)
const t = useTranslations(locale)
---

<button
  style={{ "--gradient": gradient }}
  class="modal-trigger"
  data-modal-trigger-id={modalId}
  type="button"
>
  <div class="gradient"></div>
  <figure class="image-wrapper">
    <img
      class="image"
      src={imageUrl}
      alt={`${title} project cover image`}
      width={550}
      height={295}
      loading="lazy"
      decoding="sync"
    />
  </figure>
  <h3 class="title">{title}</h3>
  <p>{t(descriptionI18nId)}</p>
</button>
<ProjectModal id={modalId} title={title} gradient={gradient} {...modalData} />

<style>
  .modal-trigger {
    --transition-time: 350ms;
    --border-radius: clamp(12px, 8.268px + 0.259vw, 16px);
    --aspect-ratio: 3 / 2;
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    text-align: start;
    border-radius: var(--border-radius);
    -webkit-tap-highlight-color: transparent;
  }

  .image-wrapper {
    display: grid;
    place-items: center;
    inline-size: 100%;
    padding-inline: clamp(30px, 21.504px + 2.265vw, 65px);
    aspect-ratio: var(--aspect-ratio);
    border-radius: var(--border-radius);
    background-image: var(--gradient);
    overflow: hidden;
  }

  .image {
    block-size: auto;
    border-radius: 12px;
    border: clamp(3px, 2.272rem + 0.194vw, 6px) solid hsl(0 0% 100% / 0.6);
    transition: transform var(--transition-time) cubic-bezier(0.4, 0, 0.2, 1);
  }

  .title {
    padding-block-start: 14px;
    font-size: 24px;
  }

  @media (hover: hover) {
    .image-wrapper {
      filter: contrast(1.2) grayscale(1);
      transition: filter var(--transition-time) cubic-bezier(0.4, 0, 0.2, 1);
    }

    .gradient {
      --active-opacity: 0.6;
      position: absolute;
      inset: 0;
      aspect-ratio: var(--aspect-ratio);
      background-image: var(--gradient);
      transform: scale(1.15);
      filter: blur(60px);
      pointer-events: none;
      opacity: 0;
      transition: opacity var(--transition-time) cubic-bezier(0.4, 0, 0.2, 1);
    }

    html[data-theme="dark"] .gradient {
      --active-opacity: 0.3;
    }

    .modal-trigger:is(:focus-visible, :hover) .gradient {
      opacity: var(--active-opacity);
    }

    .modal-trigger:is(:focus-visible, :hover) .image-wrapper {
      filter: contrast(1) grayscale(0);
    }

    .modal-trigger:hover .image {
      transform: scale(1.1);
    }
  }
</style>

---
const { class: className } = Astro.props
---

<div class:list={[className, "fake-masonry"]} data-id="fake-masonry">
  <slot />
</div>

<script>
  import { type FakeMasonryItemValue, fakeMasonryItemId } from "@/constants/ids"

  type OrderMap = Record<FakeMasonryItemValue, number>

  const {
    intro,
    moreAbout,
    greeting,
    moreProjects,
    experience,
    education,
    myStack,
    lastSongListened,
  } = fakeMasonryItemId

  const smOrder: OrderMap = {
    [intro]: 1,
    [moreAbout]: 5,
    [greeting]: 2,
    [moreProjects]: 8,
    [experience]: 4,
    [education]: 6,
    [myStack]: 7,
    [lastSongListened]: 3,
  }

  const mdOrder: OrderMap = {
    [intro]: 1,
    [moreAbout]: 2,
    [greeting]: 5,
    [moreProjects]: 4,
    [experience]: 7,
    [education]: 8,
    [myStack]: 3,
    [lastSongListened]: 6,
  }

  const lgOrder: OrderMap = {
    [intro]: 1,
    [moreAbout]: 2,
    [greeting]: 4,
    [moreProjects]: 5,
    [experience]: 6,
    [education]: 7,
    [myStack]: 8,
    [lastSongListened]: 3,
  }

  const getBreakpoint = (): "sm" | "md" | "lg" => {
    const width = window.innerWidth
    if (width >= 1400) return "lg"
    if (width >= 900) return "md"
    return "sm"
  }

  const orderMapByBreakpoint = {
    sm: smOrder,
    md: mdOrder,
    lg: lgOrder,
  }

  const wrapper = document.querySelector("[data-id='fake-masonry']")!

  let currentBreakpoint = getBreakpoint()

  const sortElements = () => {
    const order = orderMapByBreakpoint[currentBreakpoint]
    const elements = Array.from(wrapper.children)

    elements.sort((a, b) => {
      const aId = a.getAttribute("data-fake-masonry-item-id") as FakeMasonryItemValue
      const bId = b.getAttribute("data-fake-masonry-item-id") as FakeMasonryItemValue
      return (order[aId] ?? 99) - (order[bId] ?? 99)
    })

    wrapper.replaceChildren(...elements)
  }

  sortElements()

  window.addEventListener("resize", () => {
    const newBreakpoint = getBreakpoint()
    if (newBreakpoint === currentBreakpoint) return
    currentBreakpoint = newBreakpoint
    sortElements()
  })
</script>

<style>
  .fake-masonry {
    column-count: 1;
    gap: 32px;
    max-inline-size: 1920px;
    margin-inline: auto;
  }

  @media screen and (min-width: 900px) {
    .fake-masonry {
      column-count: 2;
    }
  }

  @media screen and (min-width: 1400px) {
    .fake-masonry {
      column-count: 3;
    }
  }
</style>

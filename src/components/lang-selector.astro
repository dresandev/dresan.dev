---
import { SUPPORTED_LOCALES } from "@/i18n/ui"
import { getLangFromUrl, useTranslations } from "@/i18n/utils"

const locale = getLangFromUrl(Astro.url)
const t = useTranslations(locale)
---

<div>
  {
    SUPPORTED_LOCALES.map((locale) => (
      <a
        class:list={["lang-link", { unselected: Astro.currentLocale !== locale }]}
        title={`${t("label.changeLanguage")} ${t(`text.${locale === "es" ? "spanish" : "english"}`)}`}
        href={`/${locale}/`}
      >
        {locale}
      </a>
    ))
  }
</div>

<style>
  .lang-link {
    --size: 32px;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    inline-size: var(--size);
    block-size: var(--size);
    font-weight: 500;
    text-transform: uppercase;
    transition: border-inline-end-color var(--theme-transition-duration);
  }

  .lang-link:first-of-type {
    border-inline-end: 1px solid var(--color-stroke);
  }

  .lang-link.unselected {
    color: var(--color-text-secondary);
  }
</style>
